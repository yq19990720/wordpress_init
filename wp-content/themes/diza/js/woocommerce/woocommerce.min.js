"use strict";

class MiniCart {
    miniCartAll() {
        var t = this;
        jQuery(".dropdown-toggle").dropdown(), t.remove_click_Outside(), $("#tbay-offcanvas-main .btn-toggle-canvas").on("click", function () {
            $("#tbay-offcanvas-main").removeClass("active")
        }), $(".mini-cart").click(function (t) {
            $(t.currentTarget).parents(".tbay-topcart").length > 0 && ($(".tbay-dropdown-cart").addClass("active"), $(document.body).trigger("tbay_refreshed_mini_cart_top"))
        }), $(".offcanvas-close").click(function (t) {
            t.preventDefault(), $(".tbay-dropdown-cart").removeClass("active")
        }), $(".mini-cart.v2").click(function (t) {
            t.preventDefault(), $("#wrapper-container").toggleClass(t.currentTarget.dataset.offcanvas)
        })
    }

    remove_click_Outside() {
        $(window).on("click.Bst,click touchstart tap", function (t) {
            let e = $(".tbay_header-template .tbay-element-mini-cart .dropdown-content .widget_shopping_cart_content, .tbay-element-mini-cart .widget-header-cart > span, .tbay-element-mini-cart .heading-title, .topbar-device-mobile .tbay-element-mini-cart .dropdown-content .widget_shopping_cart_content, .tbay-element-mini-cart .dropdown-content, a.ajax_add_to_cart, .tbay-element-mini-cart .cart_list a.remove");
            if (!!$(".tbay-dropdown-cart").hasClass("active")) return 0 != e.has(t.target).length || e.is(t.target) ? void 0 : ($("#wrapper-container").removeClass("offcanvas-right"), $("#wrapper-container").removeClass("offcanvas-left"), $(".tbay-dropdown-cart").removeClass("active"), $("#tbay-offcanvas-main,.tbay-offcanvas").removeClass("active"), void $("#tbay-dropdown-cart").hide(500))
        })
    }

    minicartTopContent() {
        let t = $(".tbay_header-template .tbay-element-mini-cart .dropdown-content .widget_shopping_cart_content"),
            e = t.parent().find(".widget-header-cart").outerHeight(),
            a = $(".tbay_header-template .tbay-element-mini-cart .dropdown-content .widget_shopping_cart_content .mcart-border ul.product_list_widget"),
            i = a.next().outerHeight();
        t.css("top", e), a.css("bottom", i + 10)
    }

    minicartTopContentmobile() {
        let t = $(".topbar-device-mobile .tbay-element-mini-cart .dropdown-content .widget_shopping_cart_content"),
            e = t.parent().find(".widget-header-cart").outerHeight(),
            a = $(".topbar-device-mobile .tbay-element-mini-cart .dropdown-content .widget_shopping_cart_content .mcart-border ul.product_list_widget"),
            i = a.next().outerHeight();
        t.css("top", e), a.css("bottom", i + 10)
    }
}

const ADDED_TO_CART_EVENT = "added_to_cart", LOADMORE_AJAX_HOME_PAGE = "tbay_more_post_ajax",
    LOADMORE_AJAX_SHOP_PAGE = "tbay_pagination_more_post_ajax", LIST_POST_AJAX_SHOP_PAGE = "tbay_list_post_ajax",
    GRID_POST_AJAX_SHOP_PAGE = "tbay_grid_post_ajax";

class AjaxCart {
    constructor() {
        if ("undefined" != typeof diza_settings) {
            let t = this;
            switch (t.ajaxCartPosition = diza_settings.cart_position, t.ajaxCartPosition) {
                case"popup":
                    t._initAjaxPopup();
                    break;
                case"left":
                    t._initAjaxCartLeftOrRight("left");
                    break;
                case"right":
                    t._initAjaxCartLeftOrRight("right")
            }
            MiniCart.prototype.miniCartAll(), t._initEventRemoveProduct(), $(window).on("resize", () => {
                diza_settings.mobile && $(window).width() < 992 ? MiniCart.prototype.minicartTopContentmobile() : MiniCart.prototype.minicartTopContent()
            }), $(document.body).on("wc_fragments_refreshed", function () {
                diza_settings.mobile && $(window).width() < 992 ? MiniCart.prototype.minicartTopContentmobile() : MiniCart.prototype.minicartTopContent()
            }), $(document.body).on("wc_fragments_loaded", function () {
                diza_settings.mobile && $(window).width() < 992 ? MiniCart.prototype.minicartTopContentmobile() : MiniCart.prototype.minicartTopContent()
            }), $(document.body).on("tbay_refreshed_mini_cart_top", function () {
                diza_settings.mobile && $(window).width() < 992 ? MiniCart.prototype.minicartTopContentmobile() : MiniCart.prototype.minicartTopContent()
            })
        }
    }

    _initAjaxPopupContent(t) {
        let e = $("#tbay-cart-modal"), a = $("#tbay-cart-modal").find(".modal-body-content"),
            i = diza_settings.popup_cart_noti, n = (diza_settings.popup_cart_icon, ""),
            o = t.closest(".product").find(".name  a").html();
        void 0 !== o && (n += `<div class="popup-cart">`, n += `<div class="main-content">`, n += `<p>"${o}" ${i}</p>`, wc_add_to_cart_params.is_cart || (n += `<a class="button view-cart" href="${wc_add_to_cart_params.cart_url}" title="${wc_add_to_cart_params.i18n_view_cart}">${wc_add_to_cart_params.i18n_view_cart}</a>`), diza_settings.is_checkout || (n += `<a class="button checkout" href="${diza_settings.checkout_url}" title="${diza_settings.i18n_checkout}">${diza_settings.i18n_checkout}</a>`), n += `<button type="button" class="close btn btn-close" data-dismiss="modal" aria-hidden="true">${diza_settings.popup_cart_icon}</button>`, n += `</div>`, void 0 !== (n += `</div>`) && (a.append(n), e.addClass("active"), jQuery(`.ajax_cart_popup`).trigger("active_ajax_cart_popup")))
    }

    _initAjaxPopup() {
        var t = this;
        if ("undefined" == typeof wc_add_to_cart_params) return !1;
        diza_settings.ajax_popup_quick ? jQuery(`.ajax_cart_popup`).on("click", ".ajax_add_to_cart", function (e) {
            let a = $(this);
            t._initAjaxPopupContent(a)
        }) : jQuery(`.ajax_cart_popup`).on("added_to_cart", function (e, a, i, n) {
            void 0 === a && (a = $.parseJSON(sessionStorage.getItem(wc_cart_fragments_params.fragment_name))), t._initAjaxPopupContent(n)
        }), jQuery(`.ajax_cart_popup`).on("active_ajax_cart_popup", () => {
            $("#tbay-cart-modal").hasClass("active") && $("#tbay-cart-modal").on("click", function () {
                let t = $(this);
                $(this).closest("#tbay-cart-modal").removeClass("active"), setTimeout(function () {
                    t.closest("#tbay-cart-modal").find(".modal-body .modal-body-content").empty()
                }, 300)
            })
        })
    }

    _initAjaxCartLeftOrRight(t) {
        jQuery(`.ajax_cart_${t}`).on("added_to_cart", function () {
            $(".tbay-dropdown-cart").addClass("active"), $(document.body).trigger("wc_fragments_refreshed")
        })
    }

    _initEventRemoveProduct() {
        if ("undefined" == typeof wc_add_to_cart_params) return !1;
        $(document).on("click", ".mini_cart_content a.remove", t => {
            this._onclickRemoveProduct(t);
            t.stopPropagation()
        })
    }

    _onclickRemoveProduct(t) {
        t.preventDefault();
        var e = $(t.currentTarget).attr("data-product_id"), a = $(t.currentTarget).attr("data-cart_item_key"),
            i = jQuery(t.currentTarget).parents(".mini_cart_item"),
            n = $(t.currentTarget).closest(".widget_shopping_cart_content");
        i.block({message: null, overlayCSS: {cursor: "none"}}), this._callRemoveProductAjax(e, a, n, t)
    }

    _callRemoveProductAjax(t, e, a, i) {
        $.ajax({
            type: "POST",
            dataType: "json",
            url: wc_add_to_cart_params.ajax_url,
            data: {action: "product_remove", product_id: t, cart_item_key: e},
            beforeSend: function () {
                a.find(".mini_cart_content").append('<div class="ajax-loader-wapper"><div class="ajax-loader"></div></div>').fadeTo("slow", .3), i.stopPropagation()
            },
            success: e => {
                this._onRemoveSuccess(e, t);
                $(document.body).trigger("wc_fragments_refreshed")
            }
        })
    }

    _onRemoveSuccess(t, e) {
        if (t && !t.error) {
            var a = t.fragments;
            a && $.each(a, function (t, e) {
                $(t).replaceWith(e)
            }), $('.add_to_cart_button.added[data-product_id="' + e + '"]').removeClass("added").next(".wc-forward").remove()
        }
    }
}

class WishList {
    constructor() {
        this._onChangeWishListItem()
    }

    _onChangeWishListItem() {
        jQuery(document).on("added_to_wishlist removed_from_wishlist", () => {
            var t = jQuery(".count_wishlist");
            if (0 === t.length) return;
            $.ajax({
                url: yith_wcwl_l10n.ajax_url,
                data: {action: "yith_wcwl_update_wishlist_count"},
                dataType: "json",
                success: function (e) {
                    t.html(e.count)
                },
                beforeSend: function () {
                    t.block()
                },
                complete: function () {
                    t.unblock()
                }
            })
        })
    }
}

class ProductItem {
    initOnChangeQuantity(t) {
        $(".quantity input").each(function () {
            "undefined" == typeof diza_settings || $(this).parent(".box").length || ($(this).wrap('<span class="box"></span>'), $(`<button class="minus" type="button" value="&nbsp;">${diza_settings.quantity_minus}</button>`).insertBefore($(this)), $(`<button class="plus" type="button" value="&nbsp;">${diza_settings.quantity_plus}</button>`).insertAfter($(this)))
        }), $(document).off("click", ".plus, .minus").on("click", ".plus, .minus", function (e) {
            e.preventDefault();
            var a = jQuery(this).closest(".quantity").find(".qty"), i = parseFloat(a.val()), n = $(a).attr("max"),
                o = $(a).attr("min"), r = $(a).attr("step");
            i = i && "" !== i && "NaN" !== i ? i : 0, n = "" === n || "NaN" === n ? "" : n, o = "" === o || "NaN" === o ? 0 : o, r = "any" === r || "" === r || void 0 === r || NaN === parseFloat(r) ? 1 : r, $(this).is(".plus") ? n && (n == i || i > n) ? a.val(n) : a.val(i + parseFloat(r)) : o && (o == i || i < o) ? a.val(o) : i > 0 && a.val(i - parseFloat(r)), t && "function" == typeof t && ($(this).parent().find("input").trigger("change"), t())
        })
    }

    _initSwatches() {
        0 !== $(".tbay-swatches-wrapper li a").length && $("body").on("click", ".tbay-swatches-wrapper li a", function (t) {
            t.preventDefault();
            let e = !1, a = $(this).closest(".product-block");
            if (a.find(".tbay-product-slider-gallery").hasClass("slick-initialized")) i = a.find(".image .slick-current img:eq(0)"); else var i = a.find(".image img:eq(0)");
            $(this).closest("ul").hasClass("active") || ($(this).closest("ul").addClass("active"), i.attr("data-old", i.attr("src"))), $(this).hasClass("selected") ? (i.attr("src", i.data("old")), $(this).removeClass("selected"), a.removeClass("product-swatched")) : ($(this).closest("ul").find("li a").each(function () {
                $(this).hasClass("selected") && $(this).removeClass("selected")
            }), $(this).addClass("selected"), a.addClass("product-swatched"), e = !0), e && (void 0 !== $(this).data("imageSrc") && i.attr("src", $(this).data("imageSrc")), void 0 !== $(this).data("imageSrcset") && i.attr("srcset", $(this).data("imageSrcset")), void 0 !== $(this).data("imageSizes") && i.attr("sizes", $(this).data("imageSizes")))
        })
    }
}

class Cart {
    constructor() {
        this._initEventChangeQuantity(), $(document.body).on("updated_wc_div", () => {
            this._initEventChangeQuantity();
            "undefined" != typeof wc_add_to_cart_variation_params && $(".variations_form").each(function () {
                $(this).wc_variation_form()
            })
        }), $(document.body).on("cart_page_refreshed", () => {
            this._initEventChangeQuantity()
        })
    }

    _initEventChangeQuantity() {
        (new ProductItem).initOnChangeQuantity(() => {
            $("body.woocommerce-cart [name='update_cart']").length > 0 && ($('.woocommerce-cart-form :input[name="update_cart"]').prop("disabled", !1), "undefined" != typeof diza_settings && diza_settings.ajax_update_quantity && $("[name='update_cart']").trigger("click"))
        })
    }
}

class Checkout {
    constructor() {
        this._toogleWoocommerceIcon()
    }

    _toogleWoocommerceIcon() {
        $(".woocommerce-info a").length < 1 || $(".woocommerce-info a").click(function () {
            $(this).find(".icons").toggleClass("icon-arrow-down").toggleClass("icon-arrow-up")
        })
    }
}

class LoadMore {
    constructor() {
        "undefined" != typeof diza_settings && (this._initLoadMoreOnHomePage(), this._initLoadMoreOnShopPage(), this._int_berocket_lmp_end())
    }

    _initLoadMoreOnHomePage() {
        var t = this;
        $(".more_products").each(function () {
            var e = $(this).data("id");
            $(`#more_products_${e} a[data-loadmore="true"]`).click(function () {
                var a = $(this);
                return t._callAjaxLoadMore({
                    data: {
                        action: "tbay_more_post_ajax",
                        paged: $(this).data("paged") + 1,
                        number: $(this).data("number"),
                        columns: $(this).data("columns"),
                        layout: $(this).data("layout"),
                        type: $(this).data("type"),
                        category: $(this).data("category"),
                        screen_desktop: $(this).data("desktop"),
                        screen_desktopsmall: $(this).data("desktopsmall"),
                        screen_tablet: $(this).data("tablet"),
                        screen_mobile: $(this).data("mobile")
                    }, event: a, id: e, thisItem: $(this).parent().parent()
                }), !1
            })
        })
    }

    _initLoadMoreOnShopPage() {
        $(".tbay-pagination-load-more").each(function (t) {
            $(this).data("id");
            $('.tbay-pagination-load-more a[data-loadmore="true"]').click(function () {
                var t = $(this),
                    e = {action: LOADMORE_AJAX_SHOP_PAGE, query: diza_settings.posts, page: diza_settings.current_page};
                return $.ajax({
                    url: diza_settings.ajaxurl, data: e, type: "POST", beforeSend: function (e) {
                        t.addClass("active")
                    }, success: function (e) {
                        e ? (t.closest("#main").find(".display-products > div").append(e), diza_settings.current_page++, t.removeClass("active"), diza_settings.current_page == diza_settings.max_page && t.remove()) : t.remove()
                    }
                }), !1
            })
        })
    }

    _callAjaxLoadMore(t) {
        var e = this, a = t.data, i = t.event;
        $.ajax({
            type: "POST", dataType: "JSON", url: woocommerce_params.ajax_url, data: a, beforeSend: function () {
                i.addClass("active")
            }, success: function (a) {
                e._onAjaxSuccess(a, t)
            }
        })
    }

    _onAjaxSuccess(t, e) {
        var a = e.data, i = e.event;
        0 == t.check && i.remove(), i.data("paged", a.paged), i.data("number", a.number + a.columns * ("tbay_more_post_ajax" === e.data.action ? 3 : 2)), ("tbay_more_post_ajax" === e.data.action ? $(`.widget_products_${e.id} .products>.row`) : $(".archive-shop .products >.row")).append(t.posts), "undefined" != typeof wc_add_to_cart_variation_params && $(".variations_form").each(function () {
            $(this).wc_variation_form().find(".variations select:eq(0)").trigger("change")
        }), $(".woocommerce-product-gallery").each(function () {
            jQuery(this).wc_product_gallery()
        }), jQuery(`.variable-load-more-${a.paged}`).tawcvs_variation_swatches_form(), "undefined" != typeof tawcvs_variation_swatches_form && ($(".variations_form").tawcvs_variation_swatches_form(), $(document.body).trigger("tawcvs_initialized")), i.find(".loadding").remove(), i.removeClass("active"), i.button("reset"), e.thisItem.removeAttr("style")
    }

    _int_berocket_lmp_end() {
        $(document).on("berocket_lmp_end", () => {
            $(".woocommerce-product-gallery").each(function () {
                jQuery(this).wc_product_gallery()
            });
            "undefined" != typeof wc_add_to_cart_variation_params && $(".variations_form").each(function () {
                $(this).wc_variation_form().find(".variations select:eq(0)").trigger("change")
            });
            "undefined" != typeof tawcvs_variation_swatches_form && ($(".variations_form").tawcvs_variation_swatches_form(), $(document.body).trigger("tawcvs_initialized"))
        })
    }
}

class ModalVideo {
    constructor(t, e = {classBtn: ".tbay-modalButton", defaultW: 640, defaultH: 360}) {
        this.$el = t, this.options = e, this._initVideoIframe()
    }

    _initVideoIframe() {
        $(`${this.options.classBtn}[data-target='${this.$el}']`).on("click", this._onClickModalBtn), $(this.$el).on("hidden.bs.modal", () => {
            $(this.$el).find("iframe").html("").attr("src", "")
        })
    }

    _onClickModalBtn(t) {
        let e = $(t.currentTarget).data("target");
        var a = $(t.currentTarget).attr("data-tbayVideoFullscreen") || !1, i = {
            src: $(t.currentTarget).attr("data-tbaySrc"),
            height: $(t.currentTarget).attr("data-tbayHeight") || this.options.defaultH,
            width: $(t.currentTarget).attr("data-tbayWidth") || this.options.defaultW
        };
        a && (i.allowfullscreen = ""), $(e).find("iframe").attr(i), t.preventDefault()
    }
}

class WooCommon {
    constructor() {
        this._tbayVideoModal(), this._tbayFixRemove(), $(document.body).on("tbayFixRemove", () => {
            this._tbayFixRemove()
        })
    }

    _tbayVideoModal() {
        $(".tbay-video-modal").each((t, e) => {
            new ModalVideo(`#video-modal-${$(e).attr("data-id")}`)
        })
    }

    _tbayFixRemove() {
        $(".tbay-gallery-varible .woocommerce-product-gallery__trigger").remove()
    }
}

!function (t) {
    "function" == typeof define && define.amd ? define(["jquery"], t) : t("object" == typeof exports ? require("jquery") : window.jQuery || window.Zepto)
}(function (t) {
    var e, a, i, n, o, r, s = function () {
    }, c = !!window.jQuery, d = t(window), l = function (t, a) {
        e.ev.on("mfp" + t + ".mfp", a)
    }, p = function (e, a, i, n) {
        var o = document.createElement("div");
        return o.className = "mfp-" + e, i && (o.innerHTML = i), n ? a && a.appendChild(o) : (o = t(o), a && o.appendTo(a)), o
    }, u = function (a, i) {
        e.ev.triggerHandler("mfp" + a, i), e.st.callbacks && (a = a.charAt(0).toLowerCase() + a.slice(1), e.st.callbacks[a] && e.st.callbacks[a].apply(e, t.isArray(i) ? i : [i]))
    }, f = function (a) {
        return a === r && e.currTemplate.closeBtn || (e.currTemplate.closeBtn = t(e.st.closeMarkup.replace("%title%", e.st.tClose)), r = a), e.currTemplate.closeBtn
    }, m = function () {
        t.magnificPopup.instance || ((e = new s).init(), t.magnificPopup.instance = e)
    }, g = function () {
        var t = document.createElement("p").style, e = ["ms", "O", "Moz", "Webkit"];
        if (void 0 !== t.transition) return !0;
        for (; e.length;) if (e.pop() + "Transition" in t) return !0;
        return !1
    };
    s.prototype = {
        constructor: s, init: function () {
            var a = navigator.appVersion;
            e.isLowIE = e.isIE8 = document.all && !document.addEventListener, e.isAndroid = /android/gi.test(a), e.isIOS = /iphone|ipad|ipod/gi.test(a), e.supportsTransition = g(), e.probablyMobile = e.isAndroid || e.isIOS || /(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(navigator.userAgent), i = t(document), e.popupsCache = {}
        }, open: function (a) {
            var n;
            if (!1 === a.isObj) {
                e.items = a.items.toArray(), e.index = 0;
                var r, s = a.items;
                for (n = 0; n < s.length; n++) if ((r = s[n]).parsed && (r = r.el[0]), r === a.el[0]) {
                    e.index = n;
                    break
                }
            } else e.items = t.isArray(a.items) ? a.items : [a.items], e.index = a.index || 0;
            if (e.isOpen) return void e.updateItemHTML();
            e.types = [], o = "", a.mainEl && a.mainEl.length ? e.ev = a.mainEl.eq(0) : e.ev = i, a.key ? (e.popupsCache[a.key] || (e.popupsCache[a.key] = {}), e.currTemplate = e.popupsCache[a.key]) : e.currTemplate = {}, e.st = t.extend(!0, {}, t.magnificPopup.defaults, a), e.fixedContentPos = "auto" === e.st.fixedContentPos ? !e.probablyMobile : e.st.fixedContentPos, e.st.modal && (e.st.closeOnContentClick = !1, e.st.closeOnBgClick = !1, e.st.showCloseBtn = !1, e.st.enableEscapeKey = !1), e.bgOverlay || (e.bgOverlay = p("bg").on("click.mfp", function () {
                e.close()
            }), e.wrap = p("wrap").attr("tabindex", -1).on("click.mfp", function (t) {
                e._checkIfClose(t.target) && e.close()
            }), e.container = p("container", e.wrap)), e.contentContainer = p("content"), e.st.preloader && (e.preloader = p("preloader", e.container, e.st.tLoading));
            var c = t.magnificPopup.modules;
            for (n = 0; n < c.length; n++) {
                var m = c[n];
                m = m.charAt(0).toUpperCase() + m.slice(1), e["init" + m].call(e)
            }
            u("BeforeOpen"), e.st.showCloseBtn && (e.st.closeBtnInside ? (l("MarkupParse", function (t, e, a, i) {
                a.close_replaceWith = f(i.type)
            }), o += " mfp-close-btn-in") : e.wrap.append(f())), e.st.alignTop && (o += " mfp-align-top"), e.fixedContentPos ? e.wrap.css({
                overflow: e.st.overflowY,
                overflowX: "hidden",
                overflowY: e.st.overflowY
            }) : e.wrap.css({
                top: d.scrollTop(),
                position: "absolute"
            }), (!1 === e.st.fixedBgPos || "auto" === e.st.fixedBgPos && !e.fixedContentPos) && e.bgOverlay.css({
                height: i.height(),
                position: "absolute"
            }), e.st.enableEscapeKey && i.on("keyup.mfp", function (t) {
                27 === t.keyCode && e.close()
            }), d.on("resize.mfp", function () {
                e.updateSize()
            }), e.st.closeOnContentClick || (o += " mfp-auto-cursor"), o && e.wrap.addClass(o);
            var g = e.wH = d.height(), _ = {};
            if (e.fixedContentPos && e._hasScrollBar(g)) {
                var h = e._getScrollbarSize();
                h && (_.marginRight = h)
            }
            e.fixedContentPos && (e.isIE7 ? t("body, html").css("overflow", "hidden") : _.overflow = "hidden");
            var v = e.st.mainClass;
            return e.isIE7 && (v += " mfp-ie7"), v && e._addClassToMFP(v), e.updateItemHTML(), u("BuildControls"), t("html").css(_), e.bgOverlay.add(e.wrap).prependTo(e.st.prependTo || t(document.body)), e._lastFocusedEl = document.activeElement, setTimeout(function () {
                e.content ? (e._addClassToMFP("mfp-ready"), e._setFocus()) : e.bgOverlay.addClass("mfp-ready"), i.on("focusin.mfp", e._onFocusIn)
            }, 16), e.isOpen = !0, e.updateSize(g), u("Open"), a
        }, close: function () {
            e.isOpen && (u("BeforeClose"), e.isOpen = !1, e.st.removalDelay && !e.isLowIE && e.supportsTransition ? (e._addClassToMFP("mfp-removing"), setTimeout(function () {
                e._close()
            }, e.st.removalDelay)) : e._close())
        }, _close: function () {
            u("Close");
            var a = "mfp-removing mfp-ready ";
            if (e.bgOverlay.detach(), e.wrap.detach(), e.container.empty(), e.st.mainClass && (a += e.st.mainClass + " "), e._removeClassFromMFP(a), e.fixedContentPos) {
                var n = {marginRight: ""};
                e.isIE7 ? t("body, html").css("overflow", "") : n.overflow = "", t("html").css(n)
            }
            i.off("keyup.mfp focusin.mfp"), e.ev.off(".mfp"), e.wrap.attr("class", "mfp-wrap").removeAttr("style"), e.bgOverlay.attr("class", "mfp-bg"), e.container.attr("class", "mfp-container"), !e.st.showCloseBtn || e.st.closeBtnInside && !0 !== e.currTemplate[e.currItem.type] || e.currTemplate.closeBtn && e.currTemplate.closeBtn.detach(), e.st.autoFocusLast && e._lastFocusedEl && t(e._lastFocusedEl).focus(), e.currItem = null, e.content = null, e.currTemplate = null, e.prevHeight = 0, u("AfterClose")
        }, updateSize: function (t) {
            if (e.isIOS) {
                var a = document.documentElement.clientWidth / window.innerWidth, i = window.innerHeight * a;
                e.wrap.css("height", i), e.wH = i
            } else e.wH = t || d.height();
            e.fixedContentPos || e.wrap.css("height", e.wH), u("Resize")
        }, updateItemHTML: function () {
            var a = e.items[e.index];
            e.contentContainer.detach(), e.content && e.content.detach(), a.parsed || (a = e.parseEl(e.index));
            var i = a.type;
            if (u("BeforeChange", [e.currItem ? e.currItem.type : "", i]), e.currItem = a, !e.currTemplate[i]) {
                var o = !!e.st[i] && e.st[i].markup;
                u("FirstMarkupParse", o), e.currTemplate[i] = !o || t(o)
            }
            n && n !== a.type && e.container.removeClass("mfp-" + n + "-holder");
            var r = e["get" + i.charAt(0).toUpperCase() + i.slice(1)](a, e.currTemplate[i]);
            e.appendContent(r, i), a.preloaded = !0, u("Change", a), n = a.type, e.container.prepend(e.contentContainer), u("AfterChange")
        }, appendContent: function (t, a) {
            e.content = t, t ? e.st.showCloseBtn && e.st.closeBtnInside && !0 === e.currTemplate[a] ? e.content.find(".mfp-close").length || e.content.append(f()) : e.content = t : e.content = "", u("BeforeAppend"), e.container.addClass("mfp-" + a + "-holder"), e.contentContainer.append(e.content)
        }, parseEl: function (a) {
            var i, n = e.items[a];
            if (n.tagName ? n = {el: t(n)} : (i = n.type, n = {data: n, src: n.src}), n.el) {
                for (var o = e.types, r = 0; r < o.length; r++) if (n.el.hasClass("mfp-" + o[r])) {
                    i = o[r];
                    break
                }
                n.src = n.el.attr("data-mfp-src"), n.src || (n.src = n.el.attr("href"))
            }
            return n.type = i || e.st.type || "inline", n.index = a, n.parsed = !0, e.items[a] = n, u("ElementParse", n), e.items[a]
        }, addGroup: function (t, a) {
            var i = function (i) {
                i.mfpEl = this, e._openClick(i, t, a)
            };
            a || (a = {});
            var n = "click.magnificPopup";
            a.mainEl = t, a.items ? (a.isObj = !0, t.off(n).on(n, i)) : (a.isObj = !1, a.delegate ? t.off(n).on(n, a.delegate, i) : (a.items = t, t.off(n).on(n, i)))
        }, _openClick: function (a, i, n) {
            if ((void 0 !== n.midClick ? n.midClick : t.magnificPopup.defaults.midClick) || !(2 === a.which || a.ctrlKey || a.metaKey || a.altKey || a.shiftKey)) {
                var o = void 0 !== n.disableOn ? n.disableOn : t.magnificPopup.defaults.disableOn;
                if (o) if (t.isFunction(o)) {
                    if (!o.call(e)) return !0
                } else if (d.width() < o) return !0;
                a.type && (a.preventDefault(), e.isOpen && a.stopPropagation()), n.el = t(a.mfpEl), n.delegate && (n.items = i.find(n.delegate)), e.open(n)
            }
        }, updateStatus: function (t, i) {
            if (e.preloader) {
                a !== t && e.container.removeClass("mfp-s-" + a), i || "loading" !== t || (i = e.st.tLoading);
                var n = {status: t, text: i};
                u("UpdateStatus", n), t = n.status, i = n.text, e.preloader.html(i), e.preloader.find("a").on("click", function (t) {
                    t.stopImmediatePropagation()
                }), e.container.addClass("mfp-s-" + t), a = t
            }
        }, _checkIfClose: function (a) {
            if (!t(a).hasClass("mfp-prevent-close")) {
                var i = e.st.closeOnContentClick, n = e.st.closeOnBgClick;
                if (i && n) return !0;
                if (!e.content || t(a).hasClass("mfp-close") || e.preloader && a === e.preloader[0]) return !0;
                if (a === e.content[0] || t.contains(e.content[0], a)) {
                    if (i) return !0
                } else if (n && t.contains(document, a)) return !0;
                return !1
            }
        }, _addClassToMFP: function (t) {
            e.bgOverlay.addClass(t), e.wrap.addClass(t)
        }, _removeClassFromMFP: function (t) {
            this.bgOverlay.removeClass(t), e.wrap.removeClass(t)
        }, _hasScrollBar: function (t) {
            return (e.isIE7 ? i.height() : document.body.scrollHeight) > (t || d.height())
        }, _setFocus: function () {
            (e.st.focus ? e.content.find(e.st.focus).eq(0) : e.wrap).focus()
        }, _onFocusIn: function (a) {
            if (a.target !== e.wrap[0] && !t.contains(e.wrap[0], a.target)) return e._setFocus(), !1
        }, _parseMarkup: function (e, a, i) {
            var n;
            i.data && (a = t.extend(i.data, a)), u("MarkupParse", [e, a, i]), t.each(a, function (a, i) {
                if (void 0 === i || !1 === i) return !0;
                if ((n = a.split("_")).length > 1) {
                    var o = e.find(".mfp-" + n[0]);
                    if (o.length > 0) {
                        var r = n[1];
                        "replaceWith" === r ? o[0] !== i[0] && o.replaceWith(i) : "img" === r ? o.is("img") ? o.attr("src", i) : o.replaceWith(t("<img>").attr("src", i).attr("class", o.attr("class"))) : o.attr(n[1], i)
                    }
                } else e.find(".mfp-" + a).html(i)
            })
        }, _getScrollbarSize: function () {
            if (void 0 === e.scrollbarSize) {
                var t = document.createElement("div");
                t.style.cssText = "width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;", document.body.appendChild(t), e.scrollbarSize = t.offsetWidth - t.clientWidth, document.body.removeChild(t)
            }
            return e.scrollbarSize
        }
    }, t.magnificPopup = {
        instance: null,
        proto: s.prototype,
        modules: [],
        open: function (e, a) {
            return m(), e = e ? t.extend(!0, {}, e) : {}, e.isObj = !0, e.index = a || 0, this.instance.open(e)
        },
        close: function () {
            return t.magnificPopup.instance && t.magnificPopup.instance.close()
        },
        registerModule: function (e, a) {
            a.options && (t.magnificPopup.defaults[e] = a.options), t.extend(this.proto, a.proto), this.modules.push(e)
        },
        defaults: {
            disableOn: 0,
            key: null,
            midClick: !1,
            mainClass: "",
            preloader: !0,
            focus: "",
            closeOnContentClick: !1,
            closeOnBgClick: !0,
            closeBtnInside: !0,
            showCloseBtn: !0,
            enableEscapeKey: !0,
            modal: !1,
            alignTop: !1,
            removalDelay: 0,
            prependTo: null,
            fixedContentPos: "auto",
            fixedBgPos: "auto",
            overflowY: "auto",
            closeMarkup: '<button title="%title%" type="button" class="mfp-close">&#215;</button>',
            tClose: "Close (Esc)",
            tLoading: "Loading...",
            autoFocusLast: !0
        }
    }, t.fn.magnificPopup = function (a) {
        m();
        var i = t(this);
        if ("string" == typeof a) if ("open" === a) {
            var n, o = c ? i.data("magnificPopup") : i[0].magnificPopup, r = parseInt(arguments[1], 10) || 0;
            o.items ? n = o.items[r] : (n = i, o.delegate && (n = n.find(o.delegate)), n = n.eq(r)), e._openClick({mfpEl: n}, i, o)
        } else e.isOpen && e[a].apply(e, Array.prototype.slice.call(arguments, 1)); else a = t.extend(!0, {}, a), c ? i.data("magnificPopup", a) : i[0].magnificPopup = a, e.addGroup(i, a);
        return i
    };
    var _, h, v, y = function () {
        v && (h.after(v.addClass(_)).detach(), v = null)
    };
    t.magnificPopup.registerModule("inline", {
        options: {
            hiddenClass: "hide",
            markup: "",
            tNotFound: "Content not found"
        }, proto: {
            initInline: function () {
                e.types.push("inline"), l("Close.inline", function () {
                    y()
                })
            }, getInline: function (a, i) {
                if (y(), a.src) {
                    var n = e.st.inline, o = t(a.src);
                    if (o.length) {
                        var r = o[0].parentNode;
                        r && r.tagName && (h || (_ = n.hiddenClass, h = p(_), _ = "mfp-" + _), v = o.after(h).detach().removeClass(_)), e.updateStatus("ready")
                    } else e.updateStatus("error", n.tNotFound), o = t("<div>");
                    return a.inlineElement = o, o
                }
                return e.updateStatus("ready"), e._parseMarkup(i, {}, a), i
            }
        }
    });
    var b, w = function () {
        b && t(document.body).removeClass(b)
    }, C = function () {
        w(), e.req && e.req.abort()
    };
    t.magnificPopup.registerModule("ajax", {
        options: {
            settings: null,
            cursor: "mfp-ajax-cur",
            tError: '<a href="%url%">The content</a> could not be loaded.'
        }, proto: {
            initAjax: function () {
                e.types.push("ajax"), b = e.st.ajax.cursor, l("Close.ajax", C), l("BeforeChange.ajax", C)
            }, getAjax: function (a) {
                b && t(document.body).addClass(b), e.updateStatus("loading");
                var i = t.extend({
                    url: a.src, success: function (i, n, o) {
                        var r = {data: i, xhr: o};
                        u("ParseAjax", r), e.appendContent(t(r.data), "ajax"), a.finished = !0, w(), e._setFocus(), setTimeout(function () {
                            e.wrap.addClass("mfp-ready")
                        }, 16), e.updateStatus("ready"), u("AjaxContentAdded")
                    }, error: function () {
                        w(), a.finished = a.loadError = !0, e.updateStatus("error", e.st.ajax.tError.replace("%url%", a.src))
                    }
                }, e.st.ajax.settings);
                return e.req = t.ajax(i), ""
            }
        }
    });
    var $, k = function (a) {
        if (a.data && void 0 !== a.data.title) return a.data.title;
        var i = e.st.image.titleSrc;
        if (i) {
            if (t.isFunction(i)) return i.call(e, a);
            if (a.el) return a.el.attr(i) || ""
        }
        return ""
    };
    t.magnificPopup.registerModule("image", {
        options: {
            markup: '<div class="mfp-figure"><div class="mfp-close"></div><figure><div class="mfp-img"></div><figcaption><div class="mfp-bottom-bar"><div class="mfp-title"></div><div class="mfp-counter"></div></div></figcaption></figure></div>',
            cursor: "mfp-zoom-out-cur",
            titleSrc: "title",
            verticalFit: !0,
            tError: '<a href="%url%">The image</a> could not be loaded.'
        }, proto: {
            initImage: function () {
                var a = e.st.image, i = ".image";
                e.types.push("image"), l("Open" + i, function () {
                    "image" === e.currItem.type && a.cursor && t(document.body).addClass(a.cursor)
                }), l("Close" + i, function () {
                    a.cursor && t(document.body).removeClass(a.cursor), d.off("resize.mfp")
                }), l("Resize" + i, e.resizeImage), e.isLowIE && l("AfterChange", e.resizeImage)
            }, resizeImage: function () {
                var t = e.currItem;
                if (t && t.img && e.st.image.verticalFit) {
                    var a = 0;
                    e.isLowIE && (a = parseInt(t.img.css("padding-top"), 10) + parseInt(t.img.css("padding-bottom"), 10)), t.img.css("max-height", e.wH - a)
                }
            }, _onImageHasSize: function (t) {
                t.img && (t.hasSize = !0, $ && clearInterval($), t.isCheckingImgSize = !1, u("ImageHasSize", t), t.imgHidden && (e.content && e.content.removeClass("mfp-loading"), t.imgHidden = !1))
            }, findImageSize: function (t) {
                var a = 0, i = t.img[0], n = function (o) {
                    $ && clearInterval($), $ = setInterval(function () {
                        if (i.naturalWidth > 0) return void e._onImageHasSize(t);
                        a > 200 && clearInterval($), 3 === ++a ? n(10) : 40 === a ? n(50) : 100 === a && n(500)
                    }, o)
                };
                n(1)
            }, getImage: function (a, i) {
                var n = 0, o = function () {
                    a && (a.img[0].complete ? (a.img.off(".mfploader"), a === e.currItem && (e._onImageHasSize(a), e.updateStatus("ready")), a.hasSize = !0, a.loaded = !0, u("ImageLoadComplete")) : ++n < 200 ? setTimeout(o, 100) : r())
                }, r = function () {
                    a && (a.img.off(".mfploader"), a === e.currItem && (e._onImageHasSize(a), e.updateStatus("error", s.tError.replace("%url%", a.src))), a.hasSize = !0, a.loaded = !0, a.loadError = !0)
                }, s = e.st.image, c = i.find(".mfp-img");
                if (c.length) {
                    var d = document.createElement("img");
                    d.className = "mfp-img", a.el && a.el.find("img").length && (d.alt = a.el.find("img").attr("alt")), a.img = t(d).on("load.mfploader", o).on("error.mfploader", r), d.src = a.src, c.is("img") && (a.img = a.img.clone()), (d = a.img[0]).naturalWidth > 0 ? a.hasSize = !0 : d.width || (a.hasSize = !1)
                }
                return e._parseMarkup(i, {
                    title: k(a),
                    img_replaceWith: a.img
                }, a), e.resizeImage(), a.hasSize ? ($ && clearInterval($), a.loadError ? (i.addClass("mfp-loading"), e.updateStatus("error", s.tError.replace("%url%", a.src))) : (i.removeClass("mfp-loading"), e.updateStatus("ready")), i) : (e.updateStatus("loading"), a.loading = !0, a.hasSize || (a.imgHidden = !0, i.addClass("mfp-loading"), e.findImageSize(a)), i)
            }
        }
    });
    var x, S = function () {
        return void 0 === x && (x = void 0 !== document.createElement("p").style.MozTransform), x
    };
    t.magnificPopup.registerModule("zoom", {
        options: {
            enabled: !1, easing: "ease-in-out", duration: 300, opener: function (t) {
                return t.is("img") ? t : t.find("img")
            }
        }, proto: {
            initZoom: function () {
                var t, a = e.st.zoom, i = ".zoom";
                if (a.enabled && e.supportsTransition) {
                    var n, o, r = a.duration, s = function (t) {
                        var e = t.clone().removeAttr("style").removeAttr("class").addClass("mfp-animated-image"),
                            i = "all " + a.duration / 1e3 + "s " + a.easing, n = {
                                position: "fixed",
                                zIndex: 9999,
                                left: 0,
                                top: 0,
                                "-webkit-backface-visibility": "hidden"
                            }, o = "transition";
                        return n["-webkit-" + o] = n["-moz-" + o] = n["-o-" + o] = n[o] = i, e.css(n), e
                    }, c = function () {
                        e.content.css("visibility", "visible")
                    };
                    l("BuildControls" + i, function () {
                        if (e._allowZoom()) {
                            if (clearTimeout(n), e.content.css("visibility", "hidden"), !(t = e._getItemToZoom())) return void c();
                            (o = s(t)).css(e._getOffset()), e.wrap.append(o), n = setTimeout(function () {
                                o.css(e._getOffset(!0)), n = setTimeout(function () {
                                    c(), setTimeout(function () {
                                        o.remove(), t = o = null, u("ZoomAnimationEnded")
                                    }, 16)
                                }, r)
                            }, 16)
                        }
                    }), l("BeforeClose" + i, function () {
                        if (e._allowZoom()) {
                            if (clearTimeout(n), e.st.removalDelay = r, !t) {
                                if (!(t = e._getItemToZoom())) return;
                                o = s(t)
                            }
                            o.css(e._getOffset(!0)), e.wrap.append(o), e.content.css("visibility", "hidden"), setTimeout(function () {
                                o.css(e._getOffset())
                            }, 16)
                        }
                    }), l("Close" + i, function () {
                        e._allowZoom() && (c(), o && o.remove(), t = null)
                    })
                }
            }, _allowZoom: function () {
                return "image" === e.currItem.type
            }, _getItemToZoom: function () {
                return !!e.currItem.hasSize && e.currItem.img
            }, _getOffset: function (a) {
                var i, n = (i = a ? e.currItem.img : e.st.zoom.opener(e.currItem.el || e.currItem)).offset(),
                    o = parseInt(i.css("padding-top"), 10), r = parseInt(i.css("padding-bottom"), 10);
                n.top -= t(window).scrollTop() - o;
                var s = {width: i.width(), height: (c ? i.innerHeight() : i[0].offsetHeight) - r - o};
                return S() ? s["-moz-transform"] = s.transform = "translate(" + n.left + "px," + n.top + "px)" : (s.left = n.left, s.top = n.top), s
            }
        }
    });
    var I = function (t) {
        if (e.currTemplate.iframe) {
            var a = e.currTemplate.iframe.find("iframe");
            a.length && (t || (a[0].src = "//about:blank"), e.isIE8 && a.css("display", t ? "block" : "none"))
        }
    };
    t.magnificPopup.registerModule("iframe", {
        options: {
            markup: '<div class="mfp-iframe-scaler"><div class="mfp-close"></div><iframe class="mfp-iframe" src="//about:blank" frameborder="0" allowfullscreen></iframe></div>',
            srcAction: "iframe_src",
            patterns: {
                youtube: {index: "youtube.com", id: "v=", src: "//www.youtube.com/embed/%id%?autoplay=1"},
                vimeo: {index: "vimeo.com/", id: "/", src: "//player.vimeo.com/video/%id%?autoplay=1"},
                gmaps: {index: "//maps.google.", src: "%id%&output=embed"}
            }
        }, proto: {
            initIframe: function () {
                e.types.push("iframe"), l("BeforeChange", function (t, e, a) {
                    e !== a && ("iframe" === e ? I() : "iframe" === a && I(!0))
                }), l("Close.iframe", function () {
                    I()
                })
            }, getIframe: function (a, i) {
                var n = a.src, o = e.st.iframe;
                t.each(o.patterns, function () {
                    if (n.indexOf(this.index) > -1) return this.id && (n = "string" == typeof this.id ? n.substr(n.lastIndexOf(this.id) + this.id.length, n.length) : this.id.call(this, n)), n = this.src.replace("%id%", n), !1
                });
                var r = {};
                return o.srcAction && (r[o.srcAction] = n), e._parseMarkup(i, r, a), e.updateStatus("ready"), i
            }
        }
    });
    var T = function (t) {
        var a = e.items.length;
        return t > a - 1 ? t - a : t < 0 ? a + t : t
    }, z = function (t, e, a) {
        return t.replace(/%curr%/gi, e + 1).replace(/%total%/gi, a)
    };
    t.magnificPopup.registerModule("gallery", {
        options: {
            enabled: !1,
            arrowMarkup: '<button title="%title%" type="button" class="mfp-arrow mfp-arrow-%dir%"></button>',
            preload: [0, 2],
            navigateByImgClick: !0,
            arrows: !0,
            tPrev: "Previous (Left arrow key)",
            tNext: "Next (Right arrow key)",
            tCounter: "%curr% of %total%"
        }, proto: {
            initGallery: function () {
                var a = e.st.gallery, n = ".mfp-gallery";
                if (e.direction = !0, !a || !a.enabled) return !1;
                o += " mfp-gallery", l("Open" + n, function () {
                    a.navigateByImgClick && e.wrap.on("click" + n, ".mfp-img", function () {
                        if (e.items.length > 1) return e.next(), !1
                    }), i.on("keydown" + n, function (t) {
                        37 === t.keyCode ? e.prev() : 39 === t.keyCode && e.next()
                    })
                }), l("UpdateStatus" + n, function (t, a) {
                    a.text && (a.text = z(a.text, e.currItem.index, e.items.length))
                }), l("MarkupParse" + n, function (t, i, n, o) {
                    var r = e.items.length;
                    n.counter = r > 1 ? z(a.tCounter, o.index, r) : ""
                }), l("BuildControls" + n, function () {
                    if (e.items.length > 1 && a.arrows && !e.arrowLeft) {
                        var i = a.arrowMarkup,
                            n = e.arrowLeft = t(i.replace(/%title%/gi, a.tPrev).replace(/%dir%/gi, "left")).addClass("mfp-prevent-close"),
                            o = e.arrowRight = t(i.replace(/%title%/gi, a.tNext).replace(/%dir%/gi, "right")).addClass("mfp-prevent-close");
                        n.click(function () {
                            e.prev()
                        }), o.click(function () {
                            e.next()
                        }), e.container.append(n.add(o))
                    }
                }), l("Change" + n, function () {
                    e._preloadTimeout && clearTimeout(e._preloadTimeout), e._preloadTimeout = setTimeout(function () {
                        e.preloadNearbyImages(), e._preloadTimeout = null
                    }, 16)
                }), l("Close" + n, function () {
                    i.off(n), e.wrap.off("click" + n), e.arrowRight = e.arrowLeft = null
                })
            }, next: function () {
                e.direction = !0, e.index = T(e.index + 1), e.updateItemHTML()
            }, prev: function () {
                e.direction = !1, e.index = T(e.index - 1), e.updateItemHTML()
            }, goTo: function (t) {
                e.direction = t >= e.index, e.index = t, e.updateItemHTML()
            }, preloadNearbyImages: function () {
                var t, a = e.st.gallery.preload, i = Math.min(a[0], e.items.length), n = Math.min(a[1], e.items.length);
                for (t = 1; t <= (e.direction ? n : i); t++) e._preloadItem(e.index + t);
                for (t = 1; t <= (e.direction ? i : n); t++) e._preloadItem(e.index - t)
            }, _preloadItem: function (a) {
                if (a = T(a), !e.items[a].preloaded) {
                    var i = e.items[a];
                    i.parsed || (i = e.parseEl(a)), u("LazyLoad", i), "image" === i.type && (i.img = t('<img class="mfp-img" />').on("load.mfploader", function () {
                        i.hasSize = !0
                    }).on("error.mfploader", function () {
                        i.hasSize = !0, i.loadError = !0, u("LazyLoadError", i)
                    }).attr("src", i.src)), i.preloaded = !0
                }
            }
        }
    });
    t.magnificPopup.registerModule("retina", {
        options: {
            replaceSrc: function (t) {
                return t.src.replace(/\.\w+$/, function (t) {
                    return "@2x" + t
                })
            }, ratio: 1
        }, proto: {
            initRetina: function () {
                if (window.devicePixelRatio > 1) {
                    var t = e.st.retina, a = t.ratio;
                    (a = isNaN(a) ? a() : a) > 1 && (l("ImageHasSize.retina", function (t, e) {
                        e.img.css({"max-width": e.img[0].naturalWidth / a, width: "100%"})
                    }), l("ElementParse.retina", function (e, i) {
                        i.src = t.replaceSrc(i, a)
                    }))
                }
            }
        }
    }), m()
});

class QuickView {
    constructor() {
        "undefined" != typeof diza_settings && this._init_tbay_quick_view()
    }

    _init_tbay_quick_view() {
        var t = this;
        $(document).off("click", "a.qview-button").on("click", "a.qview-button", function (e) {
            e.preventDefault();
            let a = $(this);
            a.parent().addClass("loading");
            let i = a.attr("data-effect"), n = !1, o = $(this).data("product_id"),
                r = diza_settings.ajaxurl + "?action=diza_quickview_product&product_id=" + o;
            void 0 !== diza_settings.loader && (n = !0, a.block({
                message: null,
                overlayCSS: {
                    background: "#fff url(" + diza_settings.loader + ") no-repeat center",
                    opacity: .5,
                    cursor: "none"
                }
            })), t._ajax_call(a, r, n, i), e.stopPropagation()
        })
    }

    _ajax_call(t, e, a, i) {
        $.get(e, function (e, n) {
            $.magnificPopup.open({
                removalDelay: 100, callbacks: {
                    beforeOpen: function () {
                        this.st.mainClass = i + " diza-quickview"
                    }
                }, items: {src: e, type: "inline"}
            });
            let o = $("#tbay-quick-view-content").find(".variations_form");
            "undefined" != typeof wc_add_to_cart_variation_params && o.each(function () {
                $(this).wc_variation_form()
            }), $(document.body).trigger("updated_wc_div"), t.parent().removeClass("loading"), a && t.unblock(), $(document.body).trigger("tbay_quick_view")
        })
    }
}

class DisplayMode {
    constructor() {
        "undefined" != typeof diza_settings && (this._initModeListShopPage(), this._initModeGridShopPage(), $(document.body).on("displayMode", () => {
            this._initModeListShopPage();
            this._initModeGridShopPage()
        }))
    }

    _initModeListShopPage() {
        $("#display-mode-list").each(function (t) {
            $(this).click(function () {
                var t = $(this), e = {action: "tbay_list_post_ajax", query: diza_settings.posts};
                return $.ajax({
                    url: diza_settings.ajaxurl, data: e, type: "POST", beforeSend: function (e) {
                        t.closest("#main").find(".display-products").addClass("load-ajax")
                    }, success: function (e) {
                        e && (t.parent().children().removeClass("active"), t.addClass("active"), t.closest("#main").find(".display-products > div").html(e), t.closest("#main").find(".display-products").fadeOut(0, function () {
                            $(this).addClass("products-list").removeClass("products-grid grid").fadeIn(300)
                        }), "undefined" != typeof wc_add_to_cart_variation_params && $(".variations_form").each(function () {
                            $(this).wc_variation_form().find(".variations select:eq(0)").trigger("change")
                        }), $(document.body).trigger("tbay_display_mode"), t.closest("#main").find(".display-products").removeClass("load-ajax"), Cookies.set("diza_display_mode", "list", {
                            expires: .1,
                            path: "/"
                        }))
                    }
                }), !1
            })
        })
    }

    _initModeGridShopPage() {
        $("#display-mode-grid, #display-mode-grid2").each(function (t) {
            $(this).click(function () {
                var t = $(this), e = {action: "tbay_grid_post_ajax", query: diza_settings.posts};
                t.closest("#main").find("div.display-products");
                return $.ajax({
                    url: diza_settings.ajaxurl, data: e, type: "POST", beforeSend: function (e) {
                        t.closest("#main").find(".display-products").addClass("load-ajax")
                    }, success: function (e) {
                        if (e) {
                            t.parent().children().removeClass("active"), t.addClass("active"), t.closest("#main").find(".display-products > div").html(e);
                            let a = t.closest("#main").find("div.display-products");
                            a.fadeOut(0, function () {
                                $(this).addClass("products-grid").removeClass("products-list").fadeIn(300)
                            }), "undefined" != typeof wc_add_to_cart_variation_params && $(".variations_form").each(function () {
                                $(this).wc_variation_form().find(".variations select:eq(0)").trigger("change")
                            }), $(document.body).trigger("tbay_display_mode"), t.closest("#main").find(".display-products").removeClass("load-ajax"), Cookies.set("diza_display_mode", "grid", {
                                expires: .1,
                                path: "/"
                            })
                        }
                    }
                }), !1
            })
        })
    }
}

class Shop {
    constructor() {
        this._SidebarShopMobile()
    }

    _SidebarShopMobile() {
        let t = $("#button-filter-btn"), e = $("#filter-close");
        t.on("click", function (t) {
            $(".filter-btn-wrapper").addClass("active"), $("body").addClass("filter-mobile-active")
        }), e.on("click", function (t) {
            $(".filter-btn-wrapper").removeClass("active"), $("body").removeClass("filter-mobile-active")
        })
    }
}

class AjaxFilter {
    constructor() {
        this._intAjaxFilter()
    }

    _intAjaxFilter() {
        function t(t) {
            $(".woocommerce-product-gallery").each(function () {
                jQuery(this).wc_product_gallery()
            }), $(document.body).trigger("tbayFixRemove"), $(document.body).trigger("displayMode"), $(".variations_form").tawcvs_variation_swatches_form(), $(document.body).trigger("tawcvs_initialized"), $(".variations_form").each(function () {
                $(this).wc_variation_form()
            })
        }

        jQuery(document).on("woof_ajax_done", t)
    }
}

class SingleProduct {
    constructor() {
        var t = this;
        t._intStickyMenuBar(), t._intNavImage(), t._intReviewPopup(), t._intShareMobile(), t._intTabsMobile(), t._initBuyNow(), t._initChangeImageVarible(), t._initOpenAttributeMobile(), t._initCloseAttributeMobile(), t._initCloseAttributeMobileWrapper(), t._initAddToCartClickMobile(), t._initBuyNowwClickMobile(), jQuery(document.body).on("tbay_quick_view", () => {
            t._initBuyNow()
        })
    }

    _intStickyMenuBar() {
        $("body").on("click", "#sticky-custom-add-to-cart", function (t) {
            $("#shop-now .single_add_to_cart_button").click(), t.stopPropagation()
        })
    }

    _intNavImage() {
        $(window).scroll(function () {
            let t = $(this).scrollTop() > 400;
            $(".product-nav").toggleClass("active", t)
        })
    }

    _intReviewPopup() {
        $(".lightbox-gallery").magnificPopup({
            type: "image",
            tLoading: "Loading image #%curr%...",
            gallery: {enabled: !0, navigateByImgClick: !0, preload: [0, 1]},
            image: {titleSrc: "title", verticalFit: !0}
        })
    }

    _intShareMobile() {
        let t = $(".woo-share-mobile"),
            e = $(".image-mains .show-mobile .woo-share-mobile .share-content .share-header .share-close i");
        t.find("button").click(function () {
            $(event.target).parents(".woo-share-mobile").toggleClass("open"), $("body").toggleClass("overflow-y")
        });
        let a = $(window),
            i = $(".woo-share-mobile button, .woo-share-mobile button i, .woo-share-mobile .content, .woo-share-mobile .share-title, .woo-share-mobile .share-close");
        a.on("click.Bst", function (e) {
            t.hasClass("open") && (0 != i.has(e.target).length || i.is(e.target) || (t.removeClass("open"), $("body").removeClass("overflow-y")))
        }), e.click(function () {
            t.removeClass("open"), $("body").removeClass("overflow-y")
        })
    }

    _intTabsMobile() {
        let t = $(".woocommerce-tabs-mobile"), e = t.find(".tabs-mobile a"), a = t.find(".wc-tab-mobile .close-tab"),
            i = $("body"), n = $(".tabs-sidebar");
        0 !== t.length && (e.click(function (e) {
            e.preventDefault();
            let a = $(this).data("tabid");
            i.addClass("overflow-y"), n.addClass("open"), t.find(".wc-tab-mobile").removeClass("open"), $("#" + a).addClass("open")
        }), a.click(function (t) {
            t.preventDefault(), n.removeClass("open"), i.removeClass("overflow-y"), $(this).closest(".wc-tab-mobile").removeClass("open")
        }))
    }

    _initBuyNow() {
        0 !== $(".tbay-buy-now").length && ($("body").on("click", ".tbay-buy-now", function (t) {
            t.preventDefault();
            let e = $(this).closest("form.cart"), a = e.find('[type="submit"]'),
                i = e.find('input[name="diza_buy_now"]');
            a.is(".disabled") ? a.trigger("click") : (i.val("1"), e.find(".single_add_to_cart_button").click())
        }), $(document.body).on("check_variations", function () {
            $("form.variations_form").find(".single_add_to_cart_button").each(function (t) {
                $(this).is(".disabled") ? $(this).parent().find(".tbay-buy-now").addClass("disabled") : $(this).parent().find(".tbay-buy-now").removeClass("disabled")
            })
        }))
    }

    _initFeatureVideo() {
        if ("undefined" != typeof diza_settings) {
            let t = $(document).find(diza_settings.img_class_container + ".tbay_featured_content");
            if (0 !== t.length) {
                let e = t.index(), a = $(diza_settings.thumbnail_gallery_class_element).get(e);
                $(a).addClass("tbay_featured_thumbnail")
            }
        }
    }

    _initChangeImageVarible() {
        0 !== $("form.variations_form").length && $("form.variations_form").on("change", function () {
            var t = $(this), e = [];
            let a = $(".flex-control-thumbs").find(".flex-active").attr("src");
            $(".mobile-infor-wrapper img").attr("src", a), t.find(".single_variation_wrap .single_variation .woocommerce-variation-price").is(":empty") || ($(".woocommerce-variation-add-to-cart").hasClass("woocommerce-variation-add-to-cart-disabled") ? (t.find(".mobile-infor-wrapper .infor-body .price").empty().append(t.parent().find(".price").html()), t.find(".mobile-infor-wrapper .infor-body > .stock").show()) : t.find(".single_variation_wrap .single_variation").is(":empty") ? t.find(".mobile-infor-wrapper .infor-body .price").empty().append(t.parent().find(".price").html()) : (t.find(".mobile-infor-wrapper .infor-body .price").empty().append(t.find(".single_variation_wrap .single_variation").html()), t.find(".single_variation_wrap .single_variation .woocommerce-variation-availability").is(":empty") || t.find(".mobile-infor-wrapper .infor-body > .stock").hide())), t.find(".variations tr").each(function () {
                void 0 !== $(this).find("select").val() && e.push($(this).find("select option:selected").text())
            }), t.parent().find(".mobile-attribute-list .value").empty().append(e.join("/ "))
        })
    }

    _initOpenAttributeMobile() {
        let t = $("#attribute-open");
        0 !== t.length && t.on("click", function () {
            $(this).parent().parent().find("form.cart").addClass("open open-btn-all"), $(this).parents("#tbay-main-content").addClass("open-main-content")
        })
    }

    _initAddToCartClickMobile() {
        let t = $("#tbay-click-addtocart");
        0 !== t.length && t.on("click", function () {
            $(this).parent().parent().find("form.cart").addClass("open open-btn-addtocart"), $(this).parents("#tbay-main-content").addClass("open-main-content")
        })
    }

    _initBuyNowwClickMobile() {
        let t = $("#tbay-click-buy-now");
        0 !== t.length && t.on("click", function () {
            $(this).parent().parent().find("form.cart").addClass("open open-btn-buynow"), $(this).parents("#tbay-main-content").addClass("open-main-content")
        })
    }

    _initCloseAttributeMobile() {
        let t = $("#mobile-close-infor");
        0 !== t.length && t.on("click", function () {
            $(this).parents("form.cart").removeClass("open"), $(this).parents("form.cart").hasClass("open-btn-all") && ($(this).parents("form.cart").removeClass("open-btn-all"), $(this).parents("#tbay-main-content").removeClass("open-main-content")), $(this).parents("form.cart").hasClass("open-btn-buynow") && ($(this).parents("form.cart").removeClass("open-btn-buynow"), $(this).parents("#tbay-main-content").removeClass("open-main-content")), $(this).parents("form.cart").hasClass("open-btn-addtocart") && ($(this).parents("form.cart").removeClass("open-btn-addtocart"), $(this).parents("#tbay-main-content").removeClass("open-main-content"))
        })
    }

    _initCloseAttributeMobileWrapper() {
        let t = $("#mobile-close-infor-wrapper");
        0 !== t.length && t.on("click", function () {
            $(this).parent().find("form.cart").removeClass("open"), $(this).parent().find("form.cart").hasClass("open-btn-all") && ($(this).parent().find("form.cart").removeClass("open-btn-all"), $(this).parents("#tbay-main-content").removeClass("open-main-content")), $(this).parent().find("form.cart").hasClass("open-btn-buynow") && ($(this).parent().find("form.cart").removeClass("open-btn-buynow"), $(this).parents("#tbay-main-content").removeClass("open-main-content")), $(this).parent().find("form.cart").hasClass("open-btn-addtocart") && ($(this).parent().find("form.cart").removeClass("open-btn-addtocart"), $(this).parents("#tbay-main-content").removeClass("open-main-content"))
        })
    }
}

jQuery(document).ready(() => {
    var t = new ProductItem;
    t._initSwatches();
    jQuery(document.body).trigger("tawcvs_initialized");
    new AjaxCart, new WishList, new Cart, new Checkout, new WooCommon, new LoadMore, new ModalVideo("#productvideo"), new QuickView, new DisplayMode, new Shop, new AjaxFilter, new SingleProduct
}), jQuery(document).ready(function (t) {
    (new SingleProduct)._initFeatureVideo()
});
